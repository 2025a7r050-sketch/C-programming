(a) Arithmetic operation using addition subtraction multiplication and remainder operator.


#include<stdio.h>
#include<stdlib.h>

int main() {
int a, b, addition, subtraction, multiplication , remainder;
printf("Enter the first number = ");
scanf("%d" , &a);
printf("Enter the second number = ");
scanf("%d", &b);

addition = a + b;
subtraction = a - b;
multiplication = a * b;
remainder = a % b;

printf("addition = %d\n", addition);
printf("subtraction = %d\n", subtraction);
printf("multiplication = %d\n", multiplication);
printf("remainder = %d\n", remainder);



        return 0;
}


(b) Area and perimeter of square, circle and rectangle.


#include <stdio.h>
#include <stdlib.h>


int main() {
    int r, a, b, area, perimeter;

    
    printf("Enter radius of circle: ");
    scanf("%d", &r);
    area = 3.14 * r * r;
    perimeter = 2 * 3.14 * r;
    printf("Circle -> Area = %d, Perimeter = %d\n", area, perimeter);

    printf("Enter side of square: ");
    scanf("%d", &a);
    area = a * a;
    perimeter = 4 * a;
    printf("Square -> Area = %d, Perimeter = %d\n", area, perimeter);

   
    printf("Enter length of the rectangle: ");
    scanf("%d", &a);
    printf("Enter breadth of the rectangle: ");
    scanf("%d", &b);

    area = a * b;
    perimeter = 2 * (a + b);
    printf("Rectangle -> Area = %d, Perimeter = %d\n", area, perimeter);

    return 0;
}



(c) find Euclidean distance between two points in a plane.


#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int main() {
    float x1, y1, x2, y2, distance;

    
    printf("Enter the x-coordinate of the first point (x1): ");
    scanf("%f", &x1);

    printf("Enter the y-coordinate of the first point (y1): ");
    scanf("%f", &y1);

    printf("Enter the x-coordinate of the second point (x2): ");
    scanf("%f", &x2);

    printf("Enter the y-coordinate of the second point (y2): ");
    scanf("%f", &y2);

   
    distance = sqrt(pow((x2 - x1), 2) + pow((y2 - y1), 2));

   
    printf("The Euclidean distance between the two points is: %.2f\n", distance);

    return 0;
}
